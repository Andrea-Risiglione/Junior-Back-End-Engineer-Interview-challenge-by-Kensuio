

Todos:
  New:
    Task1:
      ☐ PUT /alpha  Alphabetize (orders alphabetically) the keys in the request JSON payload, load the request into a database and returns the resulting JSON back in the HTTP response 

      ☐ POST /flatten Flatten any JSON Arrays in the request JSON payload (comma separated) such that the resulting JSON does not contain any JSON Arrays
      
      ☐ GET /status Obtains the health status of the system and responds with the details in the HTTP response
    Task2:
      ☐ Pre-load database with at least 10 products.
      
      Expected Response. Our Frontend Team expects a response matching the following requirements
      
      ☐ All products are returned
      ☐ Products are grouped by brand, sorted alphabetically
      ☐ Property brand should be omitted on products
      ☐ Products inside a brand should be sorted ascending by price
      ☐ Property onSale should be converted to a property event of type String with the value "ON SALE"
  
    @low:
      ☐ Readme.md file for installation and running.
      ☐ Dockerfile or/and Docker Compose
      ☐ API Documentation. (Swagger would be nice to have).
      ☐ A postman collection to test all implemented API Endpoints (Would be nice to have)
    Archive:
      Done:
      Cancelled:

